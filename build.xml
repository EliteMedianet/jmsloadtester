<!-- 
/**
 *   JMS Load Tester
 *   Copyright (C) 2008 Marcel Sauer <marcel_sauer@gmx.de>
 *   
 *   This file is part of JMS Load Tester.
 *
 *   JMS Load Tester is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   JMS Load Tester is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with JMS Load Tester. If not, see <http://www.gnu.org/licenses/>.
 */
 -->
<project basedir="." default="all" name="JMS Load Tester">
	
	<!-- common properties -->
	<property name="version" value="0.1"/>
	<property name="fullname" value="jmsloadtester_${version}"/>
	
	<property name="src.dir" value="./src" />
	<property name="src.test.dir" value="./test/unit" />
	
	<property name="resources.dir" value="./resources" />
	<property name="lib.dir" value="./lib" />
	
	<property name="build.dir" value="./build" />
	<property name="build.classes.dir" value="${build.dir}/classes" />
	<property name="build.test.dir" value="${build.dir}/test" />
	<property name="build.results.dir" value="${build.dir}/results" />
	<property name="unit.test.results.dir" value="${build.results.dir}/unit" />
	
	<property name="dist.dir" value="${build.dir}/dist" />
	
	<property name="coverage.dir" value="${build.results.dir}/coverage"/>
	<property name="coverage.classes.dir" value="${coverage.dir}/classes"/>
	<property name="coverage.toolname" value="GroboUtils-5"/>
	
	<!-- groboutils path -->
	<taskdef resource="ant-grobocoverage.properties">
		<classpath refid="test.path"/>
	</taskdef>
	
	<!-- path defs -->
	<path id="test.path">
		<fileset dir="${lib.dir}" includes="**/*.jar" />
		<pathelement path="${build.classes.dir}" />
		<pathelement path="${build.test.dir}" />
	</path>
			
	<!-- targets -->
    <target name="clean">
        <delete failonerror="false" includeEmptyDirs="true">
			<fileset dir="${build.dir}"/>
			<fileset dir="${dist.dir}"/>
            <fileset dir="${coverage.dir}"/>
        </delete>
    </target>

	<target name="init">
		<mkdir dir="${build.classes.dir}" />
		<mkdir dir="${build.results.dir}" />
		<mkdir dir="${build.test.dir}" />
	    <mkdir dir="${dist.dir}"/>
	    <mkdir dir="${dist.dir}/${fullname}"/>
	    <mkdir dir="${dist.dir}/${fullname}/lib"/>
	    <mkdir dir="${unit.test.results.dir}"/>
	</target>
    
    <target name="compile" depends="clean, init">
		<javac failonerror="true" source="1.5" target="1.5" srcdir="${src.dir}" destdir="${build.classes.dir}" debug="false" deprecation="false" verbose="false">
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
				</fileset>    				
			</classpath>
		</javac>
    	
		<javac failonerror="true" source="1.5" target="1.5" srcdir="${src.test.dir}" destdir="${build.test.dir}" debug="true" deprecation="false" verbose="false">
			<classpath refid="test.path" />
		</javac>
    	
        <grobo-instrument logdir="${coverage.dir}/logs" logger="fast" destdir="${coverage.classes.dir}">
            <fileset dir="${build.classes.dir}">
                <exclude name="dont/check/coverage/*.class" />
            </fileset>
            <measure type="linecount" />
            <measure type="function" />
        </grobo-instrument>
    </target>
    
	<target name="jar" depends="compile">
		<jar destfile="${dist.dir}/${fullname}/lib/${fullname}.jar">
			<fileset dir="${build.classes.dir}">
    			<include name="**/*" />
			</fileset>
		</jar>
    </target>
    
    <target name="package" depends="test, jar">
    	<copy todir="${dist.dir}/${fullname}">
    		<fileset dir="${resources.dir}">
    			<include name="*.bat"/>
    			<include name="*.sh"/>
    			<include name="*.txt"/>
    		</fileset>
    		<fileset dir=".">
    			<include name="COPYING.txt"/>
    		</fileset>
    	</copy>
    	<!-- copy libs -->
    	<copy todir="${dist.dir}/${fullname}/lib">
    		<fileset dir="${lib.dir}">
    			<include name="commons-logging-1.1.1/*"/>
    			<include name="spring-framework-2.5.4/*"/>
    		</fileset>
    	</copy>
    	<copy todir="${dist.dir}/${fullname}/conf">
    		<fileset dir="conf">
    			<include name="**/*"/>
    		</fileset>
    	</copy>
    	<zip destfile="${dist.dir}/${fullname}.zip" basedir="${dist.dir}" />
    </target>
    
	<target name="upload">
		<ftp server="ftp.marcel-sauer.de"
		       remotedir="/tech.marcel-sauer.de/htdocs/wp-content/uploads/2008/05/"
		       userid="marcel-sauer.de"
		       password="xxx"
		       depends="yes"
		       binary="yes"
			   verbose="yes">
		    <fileset dir="${dist.dir}">
		    	<include name="${fullname}.zip"/>
		    </fileset>
		</ftp>
	</target>
	
	<target name="test" depends="compile">
		<junit dir="." forkmode="perBatch" printsummary="yes" haltonfailure="true" haltonerror="false">
			<classpath location="${coverage.classes.dir}" />
			<classpath refid="test.path" />
			<formatter type="plain" />
			<batchtest fork="yes" todir="${unit.test.results.dir}">
				<fileset dir="${build.test.dir}">
					<include name="**/*Test.class"/>
					<exclude name="**/Abstract*"/>
				</fileset>
			</batchtest>
		</junit>
		
	    <grobo-report logdir="${coverage.dir}/logs">
	        <simple destdir="${coverage.dir}" removeempty="true" />
	        <source destdir="${coverage.dir}/source-report" removeempty="true" 
	        	    srcdir="src" title="JMS Load Tester Coverage Report" />
	    </grobo-report>
	</target>

    <target name="all" depends="clean, init, compile, jar, package"/>
	<target name="all_with_upload" depends="all, upload"/>

</project>