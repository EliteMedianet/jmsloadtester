###############################################################################
#
# for a detailed explanation look at the online User Guide
#
# http://jmsloadtester.marcel-sauer.de/
#
###############################################################################

# the file containing the JNDI properties
# can be relative or absolute, leave relative if possible  
jndi.properties=./conf/jndi.properties

# the name of the javax.jms.ConnectionFactory located in JNDI
# this will be used to create the connections 
javax.jms.ConnectionFactory=to be defined

# listener setup
app.listener.thread.count=0
app.listener.ramp.up.millis=0
app.listener.wait.for.message.count=1
app.listener.listen.to.destination=to be defined
# set this to true if you have CLIENT_ACKNOWLEDGE set on the session and you need to acknowledge every message 
# otherwise it will be auto acknowledged by the other ack modes
app.listener.explicit.acknowledge.message=false

# sender setup
app.sender.threads.to.start=0
app.sender.ramp.up.millis=0
app.sender.send.to.destination=to be defined
app.sender.message.content.strategy=STATIC#1#the static test message:random: :datetime: :nanotime:
app.sender.pause.millis.between.send=0

# how many seconds between progress is printed, 1 second interval should be ok
app.output.pause.seconds.between.printing.progress=1

# ByteMessageFactory or TextMessageFactory
javax.jms.message.factory=de.marcelsauer.jmsloadtester.message.TextMessageFactory

# a comma separated list of type de.marcelsauer.jmsloadtester.message.MessageInterceptor
# the default Sender adds some properties to the jms message
app.message.interceptors=de.marcelsauer.jmsloadtester.client.Sender

# gets a connection and creates a session(one session per thread) with Session.AUTO_ACKNOWLEDGE set
javax.jms.session.handler=de.marcelsauer.jmsloadtester.handler.DefaultSessionHandlerImpl

# AUTO_ACKNOWLEDGE, CLIENT_ACKNOWLEDGE, DUPS_OK_ACKNOWLEDGE
# see http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Session.html#AUTO_ACKNOWLEDGE
javax.jms.session.acknowledge.mode=AUTO_ACKNOWLEDGE

# output setup
app.output.debug.strategy=SILENT
app.output.result.strategy=SILENT
app.output.message.strategy=SILENT